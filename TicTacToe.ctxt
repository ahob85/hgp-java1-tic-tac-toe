#BlueJ class context
comment0.target=TicTacToe
comment0.text=\n\ Write\ a\ description\ of\ class\ TicTacToe\ here.\n\n\ @author\ (your\ name)\n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=
comment1.target=void\ printGreeting()
comment1.text=\n\ Prints\ a\ simple\ greeting.\ Be\ as\ creative\ as\ you\ want\ here.\ Be\ sure\ to\ \n\ include\ your\ name\ as\ the\ author\!\n
comment10.params=
comment10.target=void\ chooseRowColumn()
comment10.text=\n\ Ask\ the\ currently\ active\ player\ to\ choose\ a\ row\ and\ then\ a\ column.\ \n\ Validate\ their\ input\ to\ make\ sure\ they\ aren't\ entering\ bad\ inputs\ \n\ (only\ 0,\ 1,\ or\ 2\ should\ be\ accepted).\ If\ a\ player\ chooses\ a\ square\ \n\ that\ is\ not\ blank\ ("\ -\ "),\ they\ should\ be\ made\ to\ choose\ again,\ until\ \n\ they\ choose\ a\ blank\ square.\n\ \n\ After\ the\ player\ chooses\ a\ valid\ square,\ set\ it\ to\ "\ X\ "\ or\ "\ O\ "\ \n\ accordingly\ (mind\ the\ spaces\!).\ Then\ switch\ the\ active\ player\ to\ the\ \n\ other\ player.\n
comment11.params=
comment11.target=void\ playGame()
comment11.text=\n\ While\ turnsLeft\ is\ greater\ than\ 0\ and\ the\ winner\ variable\ is\ set\ to\ an\n\ empty\ string,\ do\ the\ following\ in\ an\ endless\ loop\:\n\ 1)\ Print\ the\ board.\n\ 2)\ If\ the\ winner\ is\ "X",\ print\ "X\ wins\!"\n\ 3)\ Otherwise,\ if\ the\ winner\ is\ "O",\ print\ "O\ wins\!".\n\ 4)\ Otherwise,\ no\ one\ has\ won,\ so\ call\ chooseRowColumn()\ and\ decrement\n\ \ \ \ turnsLeft.\n\ \ \ \ \n\ Outside\ of\ the\ loop,\ check\ if\ turnsLeft\ is\ 0.\ If\ so,\ print\ the\ board,\ \n\ then\ print\ "DRAW\!".\n\ \n\ Finally,\ the\ game\ is\ over\ at\ this\ point.\ So\ ask\ players\ if\ they\ would\ \n\ like\ to\ play\ again\ (just\ as\ you\ did\ in\ Nim).\ If\ they\ answer\ anything\ \n\ other\ than\ "yes"\ or\ "y"\ (or\ whatever\ else\ you\ want),\ set\ quit\ to\ true.\n
comment12.params=args
comment12.target=void\ main(java.lang.String[])
comment12.text=\n\ The\ "mother\ function"\ of\ the\ program.\ Runs\ the\ game\ by\ doing\ the\ \n\ following\:\n\ 1)\ Print\ a\ greeting.\n\ 2)\ While\ quit\ is\ set\ to\ false,\ do\ the\ the\ following\:\n\ \ \ \ A)\ Setup\ the\ game.\n\ \ \ \ B)\ Play\ the\ game.\n\ 3)\ Outside\ the\ loop\ above,\ print\ a\ "Goodbye"\ message.\n
comment2.params=
comment2.target=void\ resetBoard()
comment2.text=\n\ Fill\ the\ 2D\ board\ array\ with\ "\ -\ "\ strings\ (which\ represent\ empty\ \n\ spaces).\n
comment3.params=
comment3.target=void\ setupGame()
comment3.text=\n\ Initialize\ global\ variables\ as\ follows\:\n\ -initialize\ board\ as\ a\ 2D\ array\ of\ null\ values,\ with\ 3\ rows\ and\ 3\ \n\ \ columns.\n\ -call\ resetBoard()\ to\ fill\ the\ board\ with\ "\ -\ "\ (which\ represent\ empty\ \n\ \ spaces).\n\ -set\ activePlayer\ to\ either\ 1\ or\ 2\ ("coin\ flip")\:\ \n\ \ (int)\ Math.floor(Math.random()\ *\ 2\ +\ 1)\n\ -set\ winner\ to\ an\ empty\ string\ ""\n\ -set\ quit\ to\ false\n
comment4.params=
comment4.target=void\ printBoard()
comment4.text=\n\ Print\ the\ tic-tac-toe\ board\ to\ the\ terminal\ so\ the\ player\ can\ see\ it.\n
comment5.params=
comment5.target=java.lang.String\ checkRows()
comment5.text=\n\ Check\ each\ individual\ row\ for\ a\ win.\ If\ "X"\ has\ won,\ return\ "X".\ \n\ If\ "O"\ has\ won,\ return\ "O".\ If\ no\ one\ has\ won,\ return\ an\ empty\ \n\ string\ "".\n
comment6.params=
comment6.target=java.lang.String\ checkColumns()
comment6.text=\n\ Check\ each\ individual\ column\ for\ a\ win.\ If\ "X"\ has\ won,\ return\ "X".\ \n\ If\ "O"\ has\ won,\ return\ "O".\ If\ no\ one\ has\ won,\ return\ an\ empty\ string\ \n\ "".\n
comment7.params=
comment7.target=java.lang.String\ checkLeftDiag()
comment7.text=\n\ Check\ from\ the\ top\ left\ square\ to\ the\ bottom\ right\ square\ for\ a\ win.\ \n\ If\ "X"\ has\ won,\ return\ "X".\ If\ "O"\ has\ won,\ return\ "O".\ If\ no\ one\ has\ \n\ won,\ return\ an\ empty\ string\ "".\n
comment8.params=
comment8.target=java.lang.String\ checkRightDiag()
comment8.text=\n\ Check\ from\ the\ top\ right\ square\ to\ the\ bottom\ left\ square\ for\ a\ win.\ \n\ If\ "X"\ has\ won,\ return\ "X".\ If\ "O"\ has\ won,\ return\ "O".\ If\ no\ one\ has\ \n\ won,\ return\ an\ empty\ string\ "".\n
comment9.params=
comment9.target=java.lang.String\ checkWon()
comment9.text=\n\ Call\ all\ four\ "check"\ functions\ to\ determine\ if\ a\ player\ has\ won\ or\ if\ \n\ the\ game\ should\ keep\ going.\ If\ "X"\ has\ won,\ return\ "X".\ If\ "O"\ has\ won,\ \n\ return\ "O".\ If\ no\ one\ has\ won,\ return\ an\ empty\ string\ "".\n
numComments=13
